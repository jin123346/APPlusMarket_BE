name: Java CI with Gradle
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build

      - name: Get JAR_FILE
        id: jarfile
        run: |
          JAR_FILE=$(ls build/libs/*.jar | grep -v plain | head -n 1)
          echo "::add-mask::$JAR_FILE"
          echo "JAR_FILE=${JAR_FILE}" >> $GITHUB_ENV

      - name: Upload build artifact
        uses:  actions/upload-artifact@v4
        with:
          name: app
          path: ${{ env.JAR_FILE }}

      

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: build/libs/
          
      - name: List files in build/libs
        run: ls -al build/libs/
      - name: Display directory tree
        run: |
          sudo apt-get install -y tree
          tree -L 3
      - name: Display environment variables
        run: env
      
        
      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_EC2_KEY }}
      # - name: Add Host to Known Hosts
      #   run: |
      #     mkdir -p ~/.ssh
      #     ssh-keyscan -t rsa,ecdsa,ed25519 -H ${{ secrets.AWS_EC2_HOST }} >> ~/.ssh/known_hosts
      #     cat ~/.ssh/known_hosts
      - name: Add Host to Known Hosts
        run: |
          mkdir -p ~/.ssh
          HOST_KEYS=$(ssh-keyscan -t rsa,ecdsa,ed25519 -H ${{ secrets.AWS_EC2_HOST }})
          echo "$HOST_KEYS" >> ~/.ssh/known_hosts
          echo "::add-mask::$HOST_KEYS"
      - name: Copy JAR to EC2
        run: |
          JAR_FILE=$(ls -t build/libs/*.jar | head -n 1)
          echo "=== DEBUG: Selected JAR_FILE is $JAR_FILE ==="
          scp \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=~/.ssh/known_hosts \
            $JAR_FILE \
            ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }}:/home/${{ secrets.AWS_EC2_USER }}/


      # - name: Copy JAR to EC2
      #   run: |
      #     JAR_FILE=$(ls build/libs/*.jar | head -n 1)
      #     scp \
      #       -o StrictHostKeyChecking=yes \
      #       -o UserKnownHostsFile=/dev/null \
      #       $JAR_FILE \
      #       ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }}:/home/${{ secrets.AWS_EC2_USER }}/

      
      - name: Restart Spring Application
        run: |
          ssh \
            -o StrictHostKeyChecking=yes \
            ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << EOF
            sudo systemctl stop my-spring-app
            sudo systemctl start my-spring-app
            sudo journalctl -u my-spring-app -n 50 --no-pager
          EOF
